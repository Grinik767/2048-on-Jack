class ArrayAddon {
    function Array getNoZeroElements(Array arr) {
        var Array result, returnResult;
        var Tile el;
        var int i, k, counter;
        let k = 0;
        let i = 0;
        let result = Array.new(4);
        while (i < 4){
            let el = arr[i];
            if (~(el.getValue() = 0)){
                let result[k] = Tile.new(el.getValue());
                let k = k + 1;
            }
            let i = i + 1;
        }
        
        let returnResult = Array.new(2);
        let returnResult[0] = result;
        let returnResult[1] = k;
        return returnResult;
    }

    function void reverseArray (Array arr) {
        var Tile el2, el3;
        let el2 = arr[2];
        let el3 = arr[3];
        let arr[3] = arr[0];
        let arr[2] = arr[1];
        let arr[1] = el2;
        let arr[0] = el3;
        return;
    }

    function void transposeMatrix(Array arr) {
        var int i, j, element;
        var Array arri, arrj;
        let i = 0;
        while (i < 4) {
            let j = 0;
            while(j < 4) {
                if (j < i) {
                    let arri = arr[i];
                    let arrj = arr[j];
                    let element = arri[j];
                    let arri[j] = arrj[i];
                    let arrj[i] = element;
                }
                let j = j + 1;
            }
            let i = i + 1;
        }
        return;
    }

    function void disposeArray (Array arr, int length) {
        var int i;
        var Tile el;
        let i = 0;
        while (i < length){
            let el = arr[i];
            do el.dispose();
            let i = i + 1;
        }
        do arr.dispose();
        return;
    }

    function void remakeToZeroArray (Array arr, int length) {
        var int i;
        var Tile el;
        let i = 0;
        while (i < length){
            let el = arr[i];
            do el.dispose();
            let arr[i] = Tile.new(0);
            let i = i + 1;
        }
        return;
    }
 
}